 Доклад
 На тему: "Система контроля версий Mercurial"
 Выполнили:
 студенты гр. Иб/б-19-1-о
 Биктимиров А.С.
 Ипатьев Р.А.
 ---------------------------------------------------
 
*** 1 ОПИСАНИЕ ***

	Система Mercurial написана на Python, хотя чувствительные к производительности части (например, своя реализация diff) выполнены в качестве модулей-расширений на C. 
Для повышения производительности также используется Rust.Mercurial первоначально была написана для Linux, позже портирована под Windows, Mac OS X и большинство Unix-систем. 
Репозитории Mercurial управляются при помощи утилиты командной строки hg, но есть и GUI-интерфейсы.
	Наряду с традиционными возможностями систем контроля версий, Mercurial поддерживает полностью децентрализованную работу (отсутствует понятие основного хранилища кода), 
ветвление (возможно вести несколько веток одного проекта и копировать изменения между ветками), слияние репозиториев (чем и достигается «распределённость» работы). 
Поддерживается обмен данными между репозиториями через HTTP/HTTPS, SSH и вручную при помощи упакованных наборов изменений.
	Утилита hg обладает компактным интерфейсом, и Mercurial считается более простой в освоении системой, чем, например, git.

*** 2.3 Логическая структура наборов изменений ***
	При вызове команды hg commit выполняется фиксация изменений. При этом программа сохраняет в репозиторий набор изменений (англ. changeset или ревизия).
Физически происходят те же изменения, что и у вас, но сохраняются они в служебные файлы, а не в копии.
	Как правило, все наборы изменений, которые были зафиксированы, отображают в виде большой связной сети (графа), где каждый набор изменений связан с одним или двумя другими.
	Узнать идентификаторы родительских наборов изменений, с которыми связаны зафиксированные наборы изменений, можно с помощью команды hg log --debug. 
У каждого набора изменений будет два родителя (благодаря чему возможно ветвление внутри репозитория, см. hg -v help branch). 
Значение «-1:0000000000000000000000000000000000000000» означает отсутствие родителя. Например, у самого первого набора изменений в репозитории данное значение будет проставлено для обоих родителей, 
а у последующих данное значение будет проставлено для второго родителя (если для них в репозитории не использовалось ветвление), а для первого родителя будет проставлен идентификатор от предыдущего набора изменений.
	Рабочий каталог также полезно представлять в виде такого же набора изменений (который пока не зафиксирован, но, возможно, вскоре также будет зафиксирован). 
Рабочий каталог также связан с одним или двумя родительскими наборами изменений, узнать о которых можно с помощью команды hg parents. 
После фиксации изменений данные родители станут родителями для нового (уже зафиксированного) набора изменений.

